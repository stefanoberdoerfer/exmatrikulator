<ui:composition template="/WEB-INF/base.xhtml"
                xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:h5="http://xmlns.jcp.org/jsf/passthrough"
                xmlns:p="http://primefaces.org/ui">
    <!-- Define Params -->
    <ui:param name="pageTitle" value="#{msg['courses.grading']}" />
    <!-- Breadcrumbs -->
    <ui:define name="breadcrumbs">
        <li>#{gradingController.course.name}</li>
        <li class="active">#{msg['courses.grading']}</li>
    </ui:define>
    <!-- Page Content -->
    <ui:define name="content">
        <div class="headline">
            <div class="btn-group main-buttons pull-right">
                <h:link onclick="return exModal('gradeCalculateFinal');" value="#{msg['gradings.finalGrade.calculate']}"
                        class="btn btn-default" />
                <h:link onclick="return exModal('gradeInsertGroup');" value="#{msg['gradings.insert']}"
                        class="btn btn-primary" />
            </div>
            <h1>#{msg['courses.grading']}</h1>
        </div>

        <div class="alert alert-info">
            #{msg['gradings.hints.email']}
        </div>

        <ul class="nav nav-tabs inverted" role="tablist">
            <li>
                <h:link outcome="/grading/overview" value="#{msg['gradings.forStudents']}">
                    <f:param name="course-id" value="#{gradingController.course.courseId}"/>
                </h:link>
            </li>
            <li class="active">
                <h:link outcome="/grading/groups" value="#{msg['gradings.forGroups']}">
                    <f:param name="course-id" value="#{gradingController.course.courseId}"/>
                </h:link>
            </li>
        </ul>

        <h:form id="gradingForm">
            <p:dataTable id="gradingTbl" var="group" value="#{gradingController.groups}"
                         styleClass="table table-hover table-courses-overview"
                         paginator="true" rows="20"
                         paginatorTemplate="{RowsPerPageDropdown}
                             {FirstPageLink} {PreviousPageLink} {CurrentPageReport}
                             {NextPageLink} {LastPageLink}"
                         rowsPerPageTemplate="20,50,100"
                         paginatorPosition="bottom">
                <p:column styleClass="table-common-options-one">
                    <p:rowToggler/>
                </p:column>
                <p:column headerText="#{msg['groups.name']}">
                    #{group.name}
                </p:column>

                <p:rowExpansion>
                    <ui:repeat value="#{group.students}" var="student">
                        <div class="row group-students">
                            <div class="col-xs-3">
                                #{student.user.firstName} <strong>#{student.user.lastName}</strong>
                                <div class="table-common-sub">#{student.user.email}</div>
                            </div>
                            <div class="col-xs-9">
                                <h:panelGroup class="col-xs-3 grading"
                                              rendered="#{userController.isLecturer(gradingController.course)}">

                                    <strong>#{msg['gradeType.paboGrade']}</strong><br />
                                    #{gradingController.getPaboGradeName(student.paboGrade)}

                                    <p:commandLink action="#{gradingEditController.setFinalGrading(student)}"
                                                   oncomplete="return exModal('gradeEditFinal');"
                                                   update="gradeEditFinalForm">
                                        <i class="fa fa-pencil"></i>
                                    </p:commandLink>

                                </h:panelGroup>
                                <ui:repeat value="#{gradingController.course.exams}" var="exam">
                                    <h:panelGroup layout="block" class="col-xs-3 grading"
                                                  rendered="#{!gradingController.hasBooleanGradeType(exam) or
                                                            gradingController.getStudentGrading(student, exam) == null}">

                                        <strong>#{exam.getName()}</strong><br />
                                        <h:panelGroup rendered="#{!userController.isLecturer(gradingController.course) and
                                                                !gradingController.getStudentGrading(student, exam).corrector
                                                                .equals(userController.user)}">
                                            <i class="fa fa-lock"></i>
                                        </h:panelGroup>

                                        <h:panelGroup rendered="#{userController.isLecturer(gradingController.course) or
                                                                gradingController.getStudentGrading(student, exam).corrector
                                                                .equals(userController.user)}">

                                            #{gradingController.getStudentGrading(student, exam).grade.value}
                                            <h:outputText value=" / #{exam.maxPoints}" rendered="#{gradingController.isPointExam(exam)
                                                and gradingController.getStudentGrading(student, exam).grade.value ne null }" />

                                        </h:panelGroup>

                                        <p:commandLink action="#{gradingEditController.setExamGrading(student, exam)}"
                                                       oncomplete="return exModal('gradeEditExam');"
                                                       update="gradeEditExamForm" styleClass="btn-grading-edit"><i
                                                class="fa fa-pencil"></i>
                                        </p:commandLink>
                                    </h:panelGroup>
                                    <h:panelGroup layout="block" class="col-xs-3 grading"
                                                  rendered="#{gradingController.hasBooleanGradeType(exam) and
                                                            gradingController.getStudentGrading(student, exam) != null}">
                                        <strong>#{exam.getName()}</strong><br />
                                        <h:panelGroup rendered="#{!userController.isLecturer(gradingController.course) and
                                                                !gradingController.getStudentGrading(student, exam).corrector
                                                                .equals(userController.user)}">
                                            <i class="fa fa-lock"></i>
                                        </h:panelGroup>

                                        <h:panelGroup rendered="#{userController.isLecturer(gradingController.course) or
                                                                gradingController.getStudentGrading(student, exam).corrector
                                                                .equals(userController.user)}" styleClass="boolean-grade-label">
                                            <h:outputText value="#{msg['gradings.passed']}"
                                                          rendered="#{gradingController.hasPassed(student, exam)}" />
                                            <h:outputText value="#{msg['gradings.failed']}"
                                                          rendered="#{!gradingController.hasPassed(student, exam)}" />
                                        </h:panelGroup>

                                        <p:commandLink action="#{gradingEditController.setExamGrading(student, exam)}"
                                                       oncomplete="return exModal('gradeEditExam');"
                                                       update="gradeEditExamForm" styleClass="btn-grading-edit"><i
                                                class="fa fa-pencil"></i>
                                        </p:commandLink>
                                    </h:panelGroup>
                                </ui:repeat>
                            </div>
                        </div>
                    </ui:repeat>
                </p:rowExpansion>
            </p:dataTable>
        </h:form>

        <ui:include src="/WEB-INF/modals/grading/editExam.xhtml" />
        <ui:include src="/WEB-INF/modals/grading/editFinal.xhtml" />
        <ui:include src="/WEB-INF/modals/grading/groupInsert.xhtml" />
    </ui:define>
</ui:composition>